[{"/home/leo/Dev/Desafio_frontend_troupe_tecnologia/front/src/index.tsx":"1","/home/leo/Dev/Desafio_frontend_troupe_tecnologia/front/src/reportWebVitals.js":"2","/home/leo/Dev/Desafio_frontend_troupe_tecnologia/front/src/App.tsx":"3","/home/leo/Dev/Desafio_frontend_troupe_tecnologia/front/src/store/index.ts":"4","/home/leo/Dev/Desafio_frontend_troupe_tecnologia/front/src/globalStyle.ts":"5","/home/leo/Dev/Desafio_frontend_troupe_tecnologia/front/src/store/user.ts":"6","/home/leo/Dev/Desafio_frontend_troupe_tecnologia/front/src/store/customers.ts":"7","/home/leo/Dev/Desafio_frontend_troupe_tecnologia/front/src/store/customer.ts":"8","/home/leo/Dev/Desafio_frontend_troupe_tecnologia/front/src/colorTheme.ts":"9","/home/leo/Dev/Desafio_frontend_troupe_tecnologia/front/src/components/Login/index.tsx":"10","/home/leo/Dev/Desafio_frontend_troupe_tecnologia/front/src/components/Listagem/index.tsx":"11","/home/leo/Dev/Desafio_frontend_troupe_tecnologia/front/src/components/EditarCliente/index.tsx":"12","/home/leo/Dev/Desafio_frontend_troupe_tecnologia/front/src/components/Header/index.tsx":"13","/home/leo/Dev/Desafio_frontend_troupe_tecnologia/front/src/config.ts":"14","/home/leo/Dev/Desafio_frontend_troupe_tecnologia/front/src/utils/mergePathWithQueryAndQuery.ts":"15","/home/leo/Dev/Desafio_frontend_troupe_tecnologia/front/src/utils/waitForSeconds.ts":"16","/home/leo/Dev/Desafio_frontend_troupe_tecnologia/front/src/assets/index.ts":"17","/home/leo/Dev/Desafio_frontend_troupe_tecnologia/front/src/components/Login/style.ts":"18","/home/leo/Dev/Desafio_frontend_troupe_tecnologia/front/src/store/hooks.ts":"19","/home/leo/Dev/Desafio_frontend_troupe_tecnologia/front/src/components/Listagem/style.ts":"20","/home/leo/Dev/Desafio_frontend_troupe_tecnologia/front/src/components/EditarCliente/style.ts":"21","/home/leo/Dev/Desafio_frontend_troupe_tecnologia/front/src/components/Header/style.ts":"22","/home/leo/Dev/Desafio_frontend_troupe_tecnologia/front/src/components/Listagem/LoaderWheelInTheTitle.tsx":"23","/home/leo/Dev/Desafio_frontend_troupe_tecnologia/front/src/components/Listagem/table.tsx":"24","/home/leo/Dev/Desafio_frontend_troupe_tecnologia/front/src/components/Header/SearchInput.tsx":"25","/home/leo/Dev/Desafio_frontend_troupe_tecnologia/front/src/components/Header/Menu.tsx":"26","/home/leo/Dev/Desafio_frontend_troupe_tecnologia/front/src/utils/formatCpf.ts":"27","/home/leo/Dev/Desafio_frontend_troupe_tecnologia/front/src/components/Login/Input/index.tsx":"28","/home/leo/Dev/Desafio_frontend_troupe_tecnologia/front/src/components/EditarCliente/Input/index.tsx":"29","/home/leo/Dev/Desafio_frontend_troupe_tecnologia/front/src/components/Login/Input/style.ts":"30","/home/leo/Dev/Desafio_frontend_troupe_tecnologia/front/src/components/EditarCliente/Input/style.ts":"31"},{"size":724,"mtime":1629157941393,"results":"32","hashOfConfig":"33"},{"size":362,"mtime":1629157941393,"results":"34","hashOfConfig":"33"},{"size":1182,"mtime":1631487935153,"results":"35","hashOfConfig":"33"},{"size":646,"mtime":1629157941397,"results":"36","hashOfConfig":"33"},{"size":4704,"mtime":1631831628867,"results":"37","hashOfConfig":"33"},{"size":3286,"mtime":1631832751339,"results":"38","hashOfConfig":"33"},{"size":7343,"mtime":1631494569693,"results":"39","hashOfConfig":"33"},{"size":7619,"mtime":1631494853271,"results":"40","hashOfConfig":"33"},{"size":737,"mtime":1629157941393,"results":"41","hashOfConfig":"33"},{"size":3441,"mtime":1631493952962,"results":"42","hashOfConfig":"33"},{"size":2181,"mtime":1631651817282,"results":"43","hashOfConfig":"33"},{"size":8999,"mtime":1631837517983,"results":"44","hashOfConfig":"33"},{"size":1347,"mtime":1631839334506,"results":"45","hashOfConfig":"33"},{"size":116,"mtime":1631136041203,"results":"46","hashOfConfig":"33"},{"size":386,"mtime":1629157941397,"results":"47","hashOfConfig":"33"},{"size":267,"mtime":1629157941397,"results":"48","hashOfConfig":"33"},{"size":1889,"mtime":1629157941389,"results":"49","hashOfConfig":"33"},{"size":1924,"mtime":1631828370836,"results":"50","hashOfConfig":"33"},{"size":345,"mtime":1629157941397,"results":"51","hashOfConfig":"33"},{"size":3535,"mtime":1631838092077,"results":"52","hashOfConfig":"33"},{"size":1254,"mtime":1631829085543,"results":"53","hashOfConfig":"33"},{"size":4752,"mtime":1631832202107,"results":"54","hashOfConfig":"33"},{"size":1723,"mtime":1629157941393,"results":"55","hashOfConfig":"33"},{"size":4075,"mtime":1631837343801,"results":"56","hashOfConfig":"33"},{"size":1382,"mtime":1631839301242,"results":"57","hashOfConfig":"33"},{"size":1983,"mtime":1631826109021,"results":"58","hashOfConfig":"33"},{"size":201,"mtime":1631484613492,"results":"59","hashOfConfig":"33"},{"size":856,"mtime":1629157941393,"results":"60","hashOfConfig":"33"},{"size":2749,"mtime":1631141292613,"results":"61","hashOfConfig":"33"},{"size":1358,"mtime":1629157941393,"results":"62","hashOfConfig":"33"},{"size":1923,"mtime":1629157941393,"results":"63","hashOfConfig":"33"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},"ayk6uv",{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"66"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"66"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"66"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"66"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"66"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"95","messages":"96","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"115","messages":"116","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"66"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"120","messages":"121","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"122","messages":"123","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"66"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},"/home/leo/Dev/Desafio_frontend_troupe_tecnologia/front/src/index.tsx",[],["135","136"],"/home/leo/Dev/Desafio_frontend_troupe_tecnologia/front/src/reportWebVitals.js",[],["137","138"],"/home/leo/Dev/Desafio_frontend_troupe_tecnologia/front/src/App.tsx",["139"],"import {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  withRouter\n} from \"react-router-dom\";\nimport Login from './components/Login';\nimport { GlobalStyle } from \"./globalStyle\";\nimport Listagem from \"./components/Listagem\";\nimport EditarCliente from \"./components/EditarCliente\";\nimport Header from './components/Header';\nimport React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { RootState } from \"./store\";\n\n\nfunction App() {\n\n  const user = useSelector((state: RootState) => state.user);\n\n  return (\n    <Router>\n      <GlobalStyle />\n      <Switch>\n        <Route exact path=\"/login\">\n          <Login />\n        </Route>\n        <Route path=\"/\">\n          <Header />\n          <Switch>\n            <Route exact path=\"/\">\n              <Listagem />\n            </Route>\n            <Route path=\"/customers\">\n              <Listagem />\n            </Route>\n            <Route path=\"/edit/:id\">\n              <EditarCliente key={1} />\n            </Route>\n            <Route path=\"/add/\">\n              <EditarCliente key={2} />\n            </Route>\n\n          </Switch>\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default withRouter(App);\n","/home/leo/Dev/Desafio_frontend_troupe_tecnologia/front/src/store/index.ts",[],"/home/leo/Dev/Desafio_frontend_troupe_tecnologia/front/src/globalStyle.ts",[],"/home/leo/Dev/Desafio_frontend_troupe_tecnologia/front/src/store/user.ts",[],"/home/leo/Dev/Desafio_frontend_troupe_tecnologia/front/src/store/customers.ts",["140","141","142","143","144"],"\nimport { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { Action } from 'redux';\nimport { AppDispatch, AppThunk, RootState } from '.';\nimport config from '../config';\nimport { mergePathWithQueryAndQuery } from '../utils/mergePathWithQueryAndQuery';\nimport { waitForSeconds } from '../utils/waitForSeconds';\nimport { FormularyType } from '../components/EditarCliente';\nimport { useHistory } from 'react-router';\n\nexport type ClientsState = {\n    readonly status: 'idle' | 'loading' | 'loaded' | 'fail',\n    readonly pointer: number,\n    readonly lastKey: string,\n    readonly data: { [key: string]: Client[] },\n    readonly loadCompleted: boolean,\n    readonly holdInfiniteLoader: boolean,\n    readonly currentPath: string,\n    readonly currentQuery: string,\n    readonly currentKey: string,\n    readonly currentUrl: string,\n    readonly currentQuantity: number,\n    readonly reloadTrigger: boolean;\n}\n\ntype Mutable<T> = {\n    -readonly [P in keyof T]: T[P]\n};\n\nexport interface ClientsAction {\n    key?: string,\n    payload?: Client[],\n    pointer?: number,\n    quantity?: number,\n    url?: string,\n    error?: any,\n    path?: string,\n    query?: string,\n    id?: number\n}\n\nexport interface Client {\n    id: number,\n    nome: string,\n    cpf: string,\n    email: string,\n    endereco: {\n        cep: number,\n        rua: string,\n        numero: number,\n        cidade: string\n    }\n}\n\nexport type ClientsRequestResponse = Client[]; //Como estamos usando json server não há um padrao esquematizado de resposta.\n\nconst initialState: ClientsState = {\n    status: 'idle',\n    pointer: 0,\n    lastKey: '',\n    data: {},\n    loadCompleted: false,\n    holdInfiniteLoader: false,\n    currentPath: '',\n    currentQuery: '',\n    currentKey: '',\n    currentUrl: '',\n    currentQuantity: 30,\n    reloadTrigger: false,\n}\n\nconst customersSlice = createSlice({\n    name: 'customers',\n    initialState,\n    reducers: {\n        reconfigureInfiniteLoader: (state: Mutable<ClientsState>, action: PayloadAction<ClientsAction>) => {\n            state.holdInfiniteLoader = true;\n            state.loadCompleted = false;\n            state.pointer = 0;\n            state.currentQuantity = action.payload.quantity ? action.payload.quantity : state.currentQuantity;\n            state.reloadTrigger = true;\n            if (action.payload.path && action.payload.query !== undefined) {\n                state.currentPath = action.payload.path;\n                state.currentQuery = action.payload.query;\n                state.currentKey = mergePathWithQueryAndQuery(action.payload.path, action.payload.query);\n                state.currentUrl = config.apiUrl + mergePathWithQueryAndQuery(state.currentKey, '&_start=' + state.pointer + '&_limit=' + state.currentQuantity);\n            } else {\n                console.error('action.path or action.query not found');\n            }\n        },\n        infiniteCustomerLoaderStop: (state: Mutable<ClientsState>) => {\n            state.holdInfiniteLoader = false;\n        },\n        customerLoaderStart: (state: Mutable<ClientsState>, action: PayloadAction<ClientsAction>) => {\n            state.reloadTrigger = false;\n            state.status = 'loading';\n            state.lastKey = action.payload.key;\n            state.currentUrl = config.apiUrl + mergePathWithQueryAndQuery(state.currentKey, '&_start=' + state.pointer + '&_limit=' + state.currentQuantity);\n        },\n        customerLoaderSuccess: (state: Mutable<ClientsState>, action: PayloadAction<ClientsAction>) => {\n\n            state.status = 'loaded';\n\n            if (state.data[action.payload.key])\n                state.data[action.payload.key].splice(action.payload.pointer, action.payload.payload.length, ...action.payload.payload);\n            else\n                state.data[action.payload.key] = action.payload.payload;\n\n\n            if (state.lastKey === action.payload.key && action.payload.payload.length < action.payload.quantity)\n                state.loadCompleted = true;\n            else\n                state.loadCompleted = false;\n\n            state.lastKey = action.payload.key;\n\n            state.pointer = action.payload.pointer + action.payload.payload.length;\n        },\n        clientSearchFailure: (state: Mutable<ClientsState>, action: PayloadAction<ClientsAction>) => {\n            state.status = 'fail';\n        },\n        infiniteLoaderPointerReset: (state: Mutable<ClientsState>) => {\n            state.loadCompleted = false;\n            state.pointer = 0;\n        },\n        previewDeleteCustomer: (state: Mutable<ClientsState>, action: PayloadAction<ClientsAction>) => {\n            state.data[state.currentKey].forEach((item: Client, index: number )=> {\n                if(item.id===action.payload.id) {\n                    state.data[state.currentKey].splice(index, 1);\n                }\n            })\n        }\n    }\n})\n\nexport default customersSlice.reducer;\n\nexport const { reconfigureInfiniteLoader, infiniteCustomerLoaderStop, infiniteLoaderPointerReset, customerLoaderStart, customerLoaderSuccess, clientSearchFailure, previewDeleteCustomer } = customersSlice.actions;\n\n\nexport const infiniteCustomerLoaderThunk = (path = '', query = '', quantity = 30): AppThunk => {\n    return async (dispatch: AppDispatch, getState: () => RootState) => {\n\n        dispatch({ type: 'customers/infiniteCustomerLoaderStart' })\n\n        dispatch(reconfigureInfiniteLoader({ path, query, quantity }));\n\n        await waitForSeconds(0.1);\n\n        let customersState = getState().customers;\n\n        while (customersState.holdInfiniteLoader) {\n\n            if (customersState.reloadTrigger || (!customersState.loadCompleted && window.pageYOffset > document.body.clientHeight - window.innerHeight - 3000 || (customersState.pointer < customersState.data[customersState.currentKey].length - customersState.currentQuantity))) {\n                await loadMoreClients(dispatch, getState);\n            } else {\n                await waitForSeconds(0.1);\n            }\n            customersState = getState().customers;\n        }\n\n        dispatch(infiniteCustomerLoaderStop())\n    }\n}\n\nexport async function loadMoreClients(dispatch: AppDispatch, getState: () => RootState) {\n\n //   let customersState = getState().customers;\n    const rootState = getState();\n    let customersState = rootState.customers;\n    const user = rootState.user;\n\n    dispatch(customerLoaderStart({\n        url: customersState.currentUrl,\n        key: customersState.currentKey\n    }));\n\n    \n\n    customersState = getState().customers;\n\n    const result = await fetch(customersState.currentUrl, {\n        headers: {\n            'x-access-token': user.token,\n        }\n    });\n\n\n    if (result.status === 200) {\n\n        const data = await result.json();\n\n        if ('auth' in data) {\n               \n            dispatch(clientSearchFailure({ error: data['message'] }));\n            await waitForSeconds(2)\n        } else {\n            dispatch(customerLoaderSuccess({\n                payload: data,\n                url: customersState.currentUrl,\n                pointer: customersState.pointer,\n                key: customersState.currentKey,\n                quantity: customersState.currentQuantity\n            }))\n        }\n\n    } else {\n        dispatch(clientSearchFailure({ error: result.status }));\n        await waitForSeconds(2)\n    }        \n}\n\n\n","/home/leo/Dev/Desafio_frontend_troupe_tecnologia/front/src/store/customer.ts",["145","146"],"\nimport { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { AppDispatch, AppThunk, RootState } from '.';\nimport config from '../config';\nimport { waitForSeconds } from '../utils/waitForSeconds';\nimport { FormularyType } from '../components/EditarCliente';\nimport { previewDeleteCustomer } from './customers';\n\nexport type CustomerState = {\n    readonly status: 'idle' | 'loading' | 'loaded' | 'loading_failed' | 'updating' | 'updated' | 'update_failed' | 'deleting' | 'deleted' | 'deleting_failed',\n    readonly customer?: Customer,\n    readonly id: number\n    readonly error?: string,\n    readonly url?: string,\n\n}\n\ntype Mutable<T> = {\n    -readonly [P in keyof T]: T[P]\n};\n\nexport interface CustomerAction {\n    id?: number,\n    error?: string,\n    customer?: Customer,\n    url?: string\n}\n\nexport interface Customer {\n    id: number,\n    nome: string,\n    cpf: string,\n    email: string,\n    endereco: {\n        cep: number,\n        rua: string,\n        numero: number,\n        cidade: string,\n        bairro: string\n    }\n}\n\nexport type ClientsRequestResponse = Customer[]; //Como estamos usando json server não há um padrao esquematizado de resposta.\n\nconst initialState: CustomerState = {\n    status: 'idle',\n    customer: null,\n    id: -1\n}\n\nconst customersSlice = createSlice({\n    name: 'customers',\n    initialState,\n    reducers: {\n        loadCustomerStart: (state: Mutable<CustomerState>, action: PayloadAction<CustomerAction>) => {\n            state.status = 'loading';\n            state.id = action.payload.id;\n        },\n        loadCustomerSucess: (state: Mutable<CustomerState>, action: PayloadAction<CustomerAction>) => {\n            state.status = 'loaded';\n            state.id = action.payload.id;\n            state.customer = action.payload.customer;\n        },\n        loadCustomerFailure: (state: Mutable<CustomerState>, action: PayloadAction<CustomerAction>) => {\n            state.status = 'loading_failed';\n            state.id = action.payload.id;\n\n        },\n        updateCustomerStart: (state: Mutable<CustomerState>, action: PayloadAction<CustomerAction>) => {\n            state.status = 'updating';\n            state.id = action.payload.id;\n        },\n        updateCustomerSuccess: (state: Mutable<CustomerState>, action: PayloadAction<CustomerAction>) => {\n            state.status = 'updated';\n            state.id = action.payload.id;\n            state.customer = action.payload.customer;\n        },\n        updateCustomerFailure: (state: Mutable<CustomerState>, action: PayloadAction<CustomerAction>) => {\n            state.status = 'update_failed';\n            state.id = action.payload.id;\n        },\n        deleteCustomerStart: (state: Mutable<CustomerState>, action: PayloadAction<CustomerAction>) => {\n            state.status = \"deleting\";\n            state.id = action.payload.id;\n        },\n        deleteCustomerSuccess: (state: Mutable<CustomerState>, action: PayloadAction<CustomerAction>) => {\n            state.status = \"deleted\";\n            state.id = action.payload.id;\n        },\n        deleteCustomerFailure: (state: Mutable<CustomerState>, action: PayloadAction<CustomerAction>) => {\n            state.status = \"deleting_failed\";\n            state.id = action.payload.id;\n        }\n\n    }\n})\n\nexport default customersSlice.reducer;\n\nexport const {\n    loadCustomerStart,\n    loadCustomerSucess,\n    loadCustomerFailure,\n    updateCustomerStart,\n    updateCustomerSuccess,\n    updateCustomerFailure,\n    deleteCustomerStart,\n    deleteCustomerSuccess,\n    deleteCustomerFailure\n} = customersSlice.actions;\n\nexport function loadCustomer(id: string): AppThunk {\n    return async (dispatch: AppDispatch, getState: () => RootState) => {\n\n        const url = config.apiUrl + '/clientes/' + id;\n\n        const rootState = getState();\n        const user = rootState.user;\n\n        dispatch(loadCustomerStart({ id, url }));\n\n        const response = await fetch(url, {\n            method: 'get',\n            headers: {\n                'x-access-token': user.token,\n            }\n        });\n\n        if (response.status === 200) {\n            try {\n                const data = await response.json();\n\n                if (data.id) {\n                    dispatch(loadCustomerSucess({ id, customer: data, url }));\n\n                } else {\n                    dispatch(loadCustomerFailure({ id, error: 'strange answer ', url }));\n                }\n\n            } catch (e) {\n                dispatch(loadCustomerFailure({ id, error: \"Failed to parse answer :\" + e, url }));\n            }\n        } else {\n            dispatch(loadCustomerFailure({ id, error: response.status, url }))\n        }\n    }\n}\n\nexport function updateCustomer(id: number, values: FormularyType): AppThunk {\n    return async (dispatch: AppDispatch, getState: () => RootState) => {\n\n        const rootState = getState();\n        const user = rootState.user;\n        \n        dispatch(updateCustomerStart({ id }));\n\n        const url = config.apiUrl + '/clientes/' + (id !== -1 ? id : '');\n\n        const body = {\n            nome: values.name,\n            cpf: values.cpf,\n            email: values.email,\n            endereco: {\n                cep: values.cep,\n                rua: values.street,\n                numero: values.number,\n                cidade: values.city,\n                bairro: values.district\n            },\n        }\n\n\n        const response = await fetch(url, {\n            method: id === -1 ? 'POST' : 'PUT',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n                'Access-Control-Allow-Origin': config.appUrl,\n                'x-access-token': user.token,\n\n            },\n            body: JSON.stringify(body)\n        });\n\n        if (response.status === 200 || response.status === 201) {\n            try {\n                const data = await response.json();\n\n                if (data.id) {\n                    dispatch(updateCustomerSuccess({ id, customer: data, url }));\n\n                } else {\n                    dispatch(updateCustomerFailure({ id, error: 'Invalid response, has not been updated ', url }));\n                }\n\n            } catch (e) {\n                dispatch(updateCustomerFailure({ id, error: \"Failed to parse answer :\" + e, url }));\n            }\n        } else {\n            dispatch(updateCustomerFailure({ id, error: response.status, url }))\n        }\n    }\n}\n\nexport function deleteCustomerThunk(id: number): AppThunk {\n    return async (dispatch: AppDispatch, getState: () => RootState) => {\n\n        dispatch(deleteCustomerStart({ id }));\n        dispatch(previewDeleteCustomer({ id }));\n\n        const url = config.apiUrl + '/clientes/' + id;\n\n        const response = await fetch(url, {\n            method: 'DELETE',\n            headers: {\n                'Access-Control-Allow-Origin': config.appUrl,\n            },\n        });\n\n        if (response.status === 200) {\n            try {\n                const responseText = await response.text();\n\n                if (responseText == \"{}\") { //Se o json server responder {} é porque foi deletado o arquivo.\n                    dispatch(deleteCustomerSuccess({ id, url }));\n                } else {\n                    dispatch(deleteCustomerFailure({ id, error: 'Invalid response, has not been deleted ', url }));\n                }\n\n            } catch (e) {\n                dispatch(deleteCustomerFailure({ id, error: \"Failed to parse answer :\" + e, url }));\n            }\n        } else {\n            dispatch(deleteCustomerFailure({ id, error: response.status, url }))\n        }\n    }\n}","/home/leo/Dev/Desafio_frontend_troupe_tecnologia/front/src/colorTheme.ts",[],"/home/leo/Dev/Desafio_frontend_troupe_tecnologia/front/src/components/Login/index.tsx",["147","148","149"],"\nimport React from \"react\";\nimport { LoginPage, Background, LoginWindow, ProfileIcon, LoginWheel, LoginError, LoginButton } from \"./style\";\nimport Input from \"./Input\";\nimport assets from \"../../assets\";\nimport { Icon, Button, LoaderWheel } from \"../../globalStyle\";\nimport { useFormik } from 'formik';\nimport { useHistory } from \"react-router\";\nimport { useSelector } from \"react-redux\";\nimport { RootState, useAppDispatch } from '../../store';\nimport { loginThunk, loginFailure } from '../../store/user';\n\nfunction Login() {\n\n    const user = useSelector((state: RootState) => state.user);\n    const history = useHistory();\n\n    if (user.loginStatus === 'LOGGED')\n        history.push('/');\n        \n    const dispatch = useAppDispatch();\n\n    const validate = (values: { login: string, password: string }) => {\n\n        const errors: Partial<typeof values> = {};\n\n        if (!values.login) {\n            errors.login = 'Requerido';\n        } else if (\n            !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.login)\n        ) {\n            errors.login = 'Email inválido';\n        }\n        if (!values.password) {\n            //errors.password = 'Required';\n        } else if (\n            values.password.length < 6\n        ) {\n            errors.password = 'Deve ter pelo menos 8 caracteres';\n        }\n        return errors;\n    }\n\n    const formik = useFormik({\n        initialValues: {\n            login: '',\n            password: '',\n        },\n        validate,\n        onSubmit: async (values) => {\n            dispatch(loginThunk(values.login, values.password));\n        },\n    });\n\n    return (\n        <LoginPage>\n            <Background />\n            <LoginWindow>\n                <ProfileIcon />\n                <h1>Login</h1>\n                {(user.loginStatus !== 'LOGGING') &&\n                    <form onSubmit={formik.handleSubmit}>\n                        <Input\n                            type='text'\n                            name='login'\n                            formik={formik}\n                            label='E-mail'\n                            icon={assets.email_icon}\n                            placeholder='exemplo@gmail.com'\n                        />\n                        <Input\n                            type='password'\n                            name='password'\n                            formik={formik}\n                            label='Senha'\n                            icon={assets.key_icon}\n                            placeholder='********'\n                        />\n                        <LoginError>\n                            {user.loginStatus === \"INCORRECT_LOGIN_OR_PASSWORD\" && <span>Login ou password incorretos</span>\n                            }\n                            {user.loginStatus === \"LOGIN_FAILURE\" && <span>Houve um erro ao logar</span>\n                            }\n\n                        </LoginError>\n                        <LoginButton type='submit' style={{ width: '100%' }}>\n                            <Icon src={assets.login_icon} width='32px' height='32px' />\n                            Login\n                        </LoginButton>\n\n                    </form>\n                }\n                {user.loginStatus === 'LOGGING' &&\n                    <>\n                        <LoginWheel></LoginWheel>\n                    </>\n                }\n            </LoginWindow>\n        </LoginPage >\n    );\n}\n\nexport default Login;\n","/home/leo/Dev/Desafio_frontend_troupe_tecnologia/front/src/components/Listagem/index.tsx",["150","151"],"import React from 'react';\nimport { ListagemContainer, SearchDetail } from \"./style\";\nimport { Container, Icon } from \"../../globalStyle\";\nimport assets from \"../../assets\";\nimport { useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport {  useLocation } from \"react-router\";\nimport { mergePathWithQueryAndQuery } from \"../../utils/mergePathWithQueryAndQuery\";\nimport Table from \"./table\";\nimport LoaderWheelInTheTitle from './LoaderWheelInTheTitle';\nimport { RootState } from '../../store';\nimport { useAppDispatch } from '../../store/hooks';\nimport { infiniteCustomerLoaderThunk, infiniteCustomerLoaderStop, reconfigureInfiniteLoader } from '../../store/customers';\n\nfunction Listagem() {\n\n    const location = useLocation();\n    const path = '/clientes';\n\n    const query = location.search;\n\n    const clientsState = useSelector((state: RootState) => state.customers);\n    const dispatch = useAppDispatch();\n\n    useEffect(() => {\n        dispatch(infiniteCustomerLoaderThunk(location.pathname, location.search, 30))\n        return () => { dispatch(infiniteCustomerLoaderStop()) };\n    }, []);\n\n\n    useEffect(() => {\n        dispatch(reconfigureInfiniteLoader({ path, query }));\n    }, [path, query]);\n\n\n    const selectedClients = clientsState.data[mergePathWithQueryAndQuery(path, query)];\n\n    const searchedText = query.startsWith('?q=') ? query.replace('?q=', '') : '';\n\n    return (\n        <ListagemContainer>\n\n            <Container>\n                <div>\n                    <h1>\n                        <Icon src={assets.listagem_icon} width='50px' height='50px' />\n                        <span>Listagem</span>\n\n                    </h1>\n                    <LoaderWheelInTheTitle />\n                    {searchedText &&\n                        <SearchDetail>\n                            <span>Busca para: {searchedText}</span>\n                        </SearchDetail>\n                    }\n                </div>\n                \n                <Table lista={selectedClients} status={clientsState.status} loadCompleted={clientsState.loadCompleted} />\n\n            </Container>\n        </ListagemContainer>\n\n    );\n}\n\n\nexport default Listagem;\n\n","/home/leo/Dev/Desafio_frontend_troupe_tecnologia/front/src/components/EditarCliente/index.tsx",["152","153","154","155","156","157","158","159","160","161","162","163","164","165","166","167"],"/home/leo/Dev/Desafio_frontend_troupe_tecnologia/front/src/components/Header/index.tsx",["168","169","170"],"/home/leo/Dev/Desafio_frontend_troupe_tecnologia/front/src/config.ts",[],"/home/leo/Dev/Desafio_frontend_troupe_tecnologia/front/src/utils/mergePathWithQueryAndQuery.ts",[],"/home/leo/Dev/Desafio_frontend_troupe_tecnologia/front/src/utils/waitForSeconds.ts",[],"/home/leo/Dev/Desafio_frontend_troupe_tecnologia/front/src/assets/index.ts",[],"/home/leo/Dev/Desafio_frontend_troupe_tecnologia/front/src/components/Login/style.ts",[],"/home/leo/Dev/Desafio_frontend_troupe_tecnologia/front/src/store/hooks.ts",[],"/home/leo/Dev/Desafio_frontend_troupe_tecnologia/front/src/components/Listagem/style.ts",[],"/home/leo/Dev/Desafio_frontend_troupe_tecnologia/front/src/components/EditarCliente/style.ts",[],"/home/leo/Dev/Desafio_frontend_troupe_tecnologia/front/src/components/Header/style.ts",[],"/home/leo/Dev/Desafio_frontend_troupe_tecnologia/front/src/components/Listagem/LoaderWheelInTheTitle.tsx",["171"],"/* eslint-disable no-constant-condition */\nimport React from \"react\";\nimport { LoaderWheelInTheTitle_ } from './style';\nimport { useSelector } from \"react-redux\";\nimport { useRef } from \"react\";\nimport { useEffect } from \"react\";\nimport { RootState } from \"../../store\";\n\nfunction LoaderWheelInThetitle() {\n\n    const clientsState = useSelector((state: RootState) => state.customers);\n    const currentClientState = useSelector((state: RootState) => state.customer);\n\n    const elementRef = useRef<HTMLDivElement>(null);\n\n    function waitTochangePositionOnScrollDown() {\n        if (elementRef.current) {\n            if (window.pageYOffset > document.body.clientHeight - window.innerHeight - 10)\n                elementRef.current.classList.add('hidden');\n            else\n                elementRef.current.classList.remove('hidden');\n\n\n            if (window.pageYOffset > 150)\n                elementRef.current.classList.add('move-to-bottom');\n            else\n                elementRef.current.classList.remove('move-to-bottom');\n        }\n    }\n\n    useEffect(() => {\n\n        waitTochangePositionOnScrollDown();\n\n        window.addEventListener('scroll', waitTochangePositionOnScrollDown);\n\n        return () => window.removeEventListener('scroll', waitTochangePositionOnScrollDown);\n\n    }, []);\n\n    useEffect(() => {\n        waitTochangePositionOnScrollDown();\n    }, [clientsState])\n\n    if ((!clientsState.loadCompleted && clientsState.status !== \"loaded\") || (currentClientState.status === 'deleting')) {\n        return (\n            <LoaderWheelInTheTitle_ ref={elementRef}>\n\n            </LoaderWheelInTheTitle_>\n        );\n    } else {\n        return <></>\n    }\n}\n\n\nexport default LoaderWheelInThetitle;\n","/home/leo/Dev/Desafio_frontend_troupe_tecnologia/front/src/components/Listagem/table.tsx",[],"/home/leo/Dev/Desafio_frontend_troupe_tecnologia/front/src/components/Header/SearchInput.tsx",["172"],"/home/leo/Dev/Desafio_frontend_troupe_tecnologia/front/src/components/Header/Menu.tsx",["173","174","175"],"/home/leo/Dev/Desafio_frontend_troupe_tecnologia/front/src/utils/formatCpf.ts",[],"/home/leo/Dev/Desafio_frontend_troupe_tecnologia/front/src/components/Login/Input/index.tsx",[],"/home/leo/Dev/Desafio_frontend_troupe_tecnologia/front/src/components/EditarCliente/Input/index.tsx",["176","177"],"import { Formik } from \"formik\";\nimport React, { useEffect, useRef } from \"react\";\nimport { RootState } from \"../../../store\";\nimport { useAppSelector } from \"../../../store/hooks\";\nimport { InputBackground, InputIcon, ErrorLabel, InputStyles } from \"./style\";\n\ninterface props {\n    type: string,\n    name: string,\n    label: string,\n    icon: string,\n    placeholder?: string,\n    formik: any,\n    format?: 'none' | 'cpf' | 'email' | 'cep',\n    onChange?: (e: any) => void,\n    disabled?: boolean\n}\n\nexport default function Input({ type, name, label, icon, formik, placeholder, format, onChange, disabled }: props) {\n\n\n    const customerState = useAppSelector((store: RootState) => store.customer);\n\n    const customer = customerState.customer;\n\n    const elRef = useRef(null);\n\n    function handleFormatMasking(e: { target: HTMLInputElement }) {\n\n    \n        if (format === 'cpf')\n            e.target.value = formatCPF(e.target.value);\n    \n    \n        if (format === 'cep')\n            e.target.value = formatCEP(e.target.value);\n    \n        formik.handleChange(e);\n    \n        if (onChange)\n            onChange(e);\n    }\n\n    useEffect(() => {\n\n        \n        handleFormatMasking({ target: elRef.current });\n        \n    }, [customer])\n    \n    return (\n        <InputStyles>\n            <label htmlFor={name}>{label}</label>\n            {formik.errors[name] ? <ErrorLabel>({formik.errors[name]})</ErrorLabel> : null}\n            <InputBackground disabled={disabled}>\n                <InputIcon icon={icon}></InputIcon>\n                <input                    \n                    ref={elRef}\n                    type={type}\n                    name={name} \n                    id={name}\n                    onChange={handleFormatMasking}\n                    value={formik.values[name]}\n                    placeholder={placeholder}\n                    disabled={disabled}\n                />\n            </InputBackground>\n        </InputStyles>\n\n    )\n}\n\n\nexport function formatCPF(cpf: string | undefined) {\n\n    cpf = cpf.replace(/[^\\d]/g, \"\"); //remove caracteres especiais e letras\n\n    if (cpf.length < 7 && cpf.length > 3) {\n        return cpf.replace(/(\\d{3})/, \"$1.\");\n    }\n    if (cpf.length < 10 && cpf.length > 6) {\n        return cpf.replace(/(\\d{3})(\\d{3})/, \"$1.$2.\");\n    }\n    if (cpf.length > 9) {\n       \n        return cpf.replace(/(\\d{3})(\\d{3})(\\d{3})/, \"$1.$2.$3-\");\n    }\n\n    return cpf;\n}\n\nexport function formatCEP(cpf: string | undefined) {\n\n\n\n    if (cpf === \"undefined\" || typeof cpf === 'undefined')\n        return \"\";\n    //retira os caracteres indesejados...\n    cpf = cpf.replace(/[^\\d]/g, \"\").substring(0, 8);\n\n    //realizar a formatação...\n    return cpf.replace(/(\\d{5})(\\d{3})/, \"$1-$2\");\n}\n\n","/home/leo/Dev/Desafio_frontend_troupe_tecnologia/front/src/components/Login/Input/style.ts",[],"/home/leo/Dev/Desafio_frontend_troupe_tecnologia/front/src/components/EditarCliente/Input/style.ts",[],{"ruleId":"178","replacedBy":"179"},{"ruleId":"180","replacedBy":"181"},{"ruleId":"178","replacedBy":"179"},{"ruleId":"180","replacedBy":"181"},{"ruleId":"182","severity":1,"message":"183","line":19,"column":9,"nodeType":"184","messageId":"185","endLine":19,"endColumn":13},{"ruleId":"182","severity":1,"message":"186","line":3,"column":10,"nodeType":"184","messageId":"185","endLine":3,"endColumn":16},{"ruleId":"182","severity":1,"message":"187","line":8,"column":10,"nodeType":"184","messageId":"185","endLine":8,"endColumn":23},{"ruleId":"182","severity":1,"message":"188","line":9,"column":10,"nodeType":"184","messageId":"185","endLine":9,"endColumn":20},{"ruleId":"189","severity":1,"message":"190","line":154,"column":80,"nodeType":"191","messageId":"192","endLine":154,"endColumn":82},{"ruleId":"189","severity":1,"message":"190","line":154,"column":159,"nodeType":"191","messageId":"192","endLine":154,"endColumn":161},{"ruleId":"182","severity":1,"message":"193","line":5,"column":10,"nodeType":"184","messageId":"185","endLine":5,"endColumn":24},{"ruleId":"194","severity":1,"message":"195","line":224,"column":34,"nodeType":"196","messageId":"197","endLine":224,"endColumn":36},{"ruleId":"182","severity":1,"message":"198","line":6,"column":16,"nodeType":"184","messageId":"185","endLine":6,"endColumn":22},{"ruleId":"182","severity":1,"message":"199","line":6,"column":24,"nodeType":"184","messageId":"185","endLine":6,"endColumn":35},{"ruleId":"182","severity":1,"message":"200","line":11,"column":22,"nodeType":"184","messageId":"185","endLine":11,"endColumn":34},{"ruleId":"201","severity":1,"message":"202","line":28,"column":8,"nodeType":"203","endLine":28,"endColumn":10,"suggestions":"204"},{"ruleId":"201","severity":1,"message":"205","line":33,"column":8,"nodeType":"203","endLine":33,"endColumn":21,"suggestions":"206"},{"ruleId":"182","severity":1,"message":"199","line":3,"column":35,"nodeType":"184","messageId":"185","endLine":3,"endColumn":46},{"ruleId":"182","severity":1,"message":"207","line":43,"column":6,"nodeType":"184","messageId":"185","endLine":43,"endColumn":21},{"ruleId":"201","severity":1,"message":"208","line":64,"column":8,"nodeType":"203","endLine":64,"endColumn":10,"suggestions":"209"},{"ruleId":"194","severity":1,"message":"210","line":87,"column":36,"nodeType":"196","messageId":"197","endLine":87,"endColumn":38},{"ruleId":"201","severity":1,"message":"211","line":152,"column":8,"nodeType":"203","endLine":152,"endColumn":18,"suggestions":"212"},{"ruleId":"189","severity":1,"message":"190","line":194,"column":25,"nodeType":"191","messageId":"192","endLine":194,"endColumn":27},{"ruleId":"189","severity":1,"message":"190","line":194,"column":56,"nodeType":"191","messageId":"192","endLine":194,"endColumn":58},{"ruleId":"189","severity":1,"message":"190","line":198,"column":75,"nodeType":"191","messageId":"192","endLine":198,"endColumn":77},{"ruleId":"189","severity":1,"message":"190","line":223,"column":29,"nodeType":"191","messageId":"192","endLine":223,"endColumn":31},{"ruleId":"194","severity":1,"message":"195","line":243,"column":16,"nodeType":"196","messageId":"197","endLine":243,"endColumn":18},{"ruleId":"194","severity":1,"message":"195","line":248,"column":16,"nodeType":"196","messageId":"197","endLine":248,"endColumn":18},{"ruleId":"194","severity":1,"message":"195","line":248,"column":33,"nodeType":"196","messageId":"197","endLine":248,"endColumn":35},{"ruleId":"194","severity":1,"message":"210","line":249,"column":15,"nodeType":"196","messageId":"197","endLine":249,"endColumn":17},{"ruleId":"194","severity":1,"message":"195","line":255,"column":16,"nodeType":"196","messageId":"197","endLine":255,"endColumn":18},{"ruleId":"194","severity":1,"message":"195","line":255,"column":33,"nodeType":"196","messageId":"197","endLine":255,"endColumn":35},{"ruleId":"194","severity":1,"message":"210","line":256,"column":15,"nodeType":"196","messageId":"197","endLine":256,"endColumn":17},{"ruleId":"182","severity":1,"message":"213","line":3,"column":10,"nodeType":"184","messageId":"185","endLine":3,"endColumn":14},{"ruleId":"182","severity":1,"message":"214","line":4,"column":8,"nodeType":"184","messageId":"185","endLine":4,"endColumn":14},{"ruleId":"182","severity":1,"message":"215","line":19,"column":11,"nodeType":"184","messageId":"185","endLine":19,"endColumn":19},{"ruleId":"216","severity":1,"message":"217","line":47,"column":13,"nodeType":"218","messageId":"219","endLine":47,"endColumn":54},{"ruleId":"182","severity":1,"message":"220","line":12,"column":11,"nodeType":"184","messageId":"185","endLine":12,"endColumn":19},{"ruleId":"182","severity":1,"message":"221","line":1,"column":17,"nodeType":"184","messageId":"185","endLine":1,"endColumn":26},{"ruleId":"182","severity":1,"message":"222","line":5,"column":10,"nodeType":"184","messageId":"185","endLine":5,"endColumn":14},{"ruleId":"182","severity":1,"message":"223","line":10,"column":10,"nodeType":"184","messageId":"185","endLine":10,"endColumn":22},{"ruleId":"182","severity":1,"message":"224","line":1,"column":10,"nodeType":"184","messageId":"185","endLine":1,"endColumn":16},{"ruleId":"201","severity":1,"message":"225","line":49,"column":8,"nodeType":"203","endLine":49,"endColumn":18,"suggestions":"226"},"no-native-reassign",["227"],"no-negated-in-lhs",["228"],"@typescript-eslint/no-unused-vars","'user' is assigned a value but never used.","Identifier","unusedVar","'Action' is defined but never used.","'FormularyType' is defined but never used.","'useHistory' is defined but never used.","no-mixed-operators","Unexpected mix of '&&' and '||'. Use parentheses to clarify the intended order of operations.","LogicalExpression","unexpectedMixedOperator","'waitForSeconds' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Button' is defined but never used.","'LoaderWheel' is defined but never used.","'loginFailure' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch', 'location.pathname', and 'location.search'. Either include them or remove the dependency array.","ArrayExpression",["229"],"React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["230"],"'allKeysAsString' is defined but never used.","React Hook useEffect has missing dependencies: 'dispatch', 'formik', and 'id'. Either include them or remove the dependency array.",["231"],"Expected '!==' and instead saw '!='.","React Hook useEffect has missing dependencies: 'formik' and 'id'. Either include them or remove the dependency array.",["232"],"'Icon' is defined but never used.","'assets' is defined but never used.","'location' is assigned a value but never used.","react/jsx-pascal-case","Imported JSX component LoaderWheelInTheTitle_ must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","usePascalOrSnakeCase","'dispatch' is assigned a value but never used.","'useEffect' is defined but never used.","'Link' is defined but never used.","'hideDropdown' is defined but never used.","'Formik' is defined but never used.","React Hook useEffect has a missing dependency: 'handleFormatMasking'. Either include it or remove the dependency array.",["233"],"no-global-assign","no-unsafe-negation",{"desc":"234","fix":"235"},{"desc":"236","fix":"237"},{"desc":"238","fix":"239"},{"desc":"240","fix":"241"},{"desc":"242","fix":"243"},"Update the dependencies array to be: [dispatch, location.pathname, location.search]",{"range":"244","text":"245"},"Update the dependencies array to be: [dispatch, path, query]",{"range":"246","text":"247"},"Update the dependencies array to be: [dispatch, formik, id]",{"range":"248","text":"249"},"Update the dependencies array to be: [customer, formik, id]",{"range":"250","text":"251"},"Update the dependencies array to be: [customer, handleFormatMasking]",{"range":"252","text":"253"},[1113,1115],"[dispatch, location.pathname, location.search]",[1211,1224],"[dispatch, path, query]",[1534,1536],"[dispatch, formik, id]",[3953,3963],"[customer, formik, id]",[1237,1247],"[customer, handleFormatMasking]"]