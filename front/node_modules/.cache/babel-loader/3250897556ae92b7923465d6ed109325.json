{"ast":null,"code":"export function waitForSeconds(seconds) {\n  return new Promise((resolve, reject) => setTimeout(() => resolve(), seconds * 1000));\n}\nexport function waitForEndOfFrame() {\n  return new Promise((resolve, reject) => setTimeout(() => resolve(), 16));\n}","map":{"version":3,"sources":["/home/leo/Dev/Desafio_frontend_troupe_tecnologia/src/utils/waitForSeconds.ts"],"names":["waitForSeconds","seconds","Promise","resolve","reject","setTimeout","waitForEndOfFrame"],"mappings":"AAAA,OAAO,SAASA,cAAT,CAAyBC,OAAzB,EAA0C;AAC7C,SAAO,IAAIC,OAAJ,CAAkB,CAACC,OAAD,EAAUC,MAAV,KAAoBC,UAAU,CAAC,MAAIF,OAAO,EAAZ,EAAgBF,OAAO,GAAC,IAAxB,CAAhD,CAAP;AACH;AAED,OAAO,SAASK,iBAAT,GAA6B;AAChC,SAAO,IAAIJ,OAAJ,CAAkB,CAACC,OAAD,EAAUC,MAAV,KAAoBC,UAAU,CAAC,MAAIF,OAAO,EAAZ,EAAgB,EAAhB,CAAhD,CAAP;AACH","sourcesContent":["export function waitForSeconds (seconds: number) {\n    return new Promise<void>((resolve, reject)=> setTimeout(()=>resolve(), seconds*1000));\n}\n\nexport function waitForEndOfFrame() {\n    return new Promise<void>((resolve, reject)=> setTimeout(()=>resolve(), 16));\n}\n\n"]},"metadata":{},"sourceType":"module"}