{"ast":null,"code":"var _jsxFileName = \"/home/leo/Dev/Desafio_frontend_troupe_tecnologia/src/components/EditarCliente/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { EditarStyles, CenterButtons, CenteredLoaderWheel } from \"./style\";\nimport { Button, Container, Icon } from \"../../globalStyle\";\nimport assets from \"../../assets\";\nimport Input from \"./Input\";\nimport { useFormik } from \"formik\";\nimport { useAppDispatch, useAppSelector } from \"../../store/hooks\";\nimport { useHistory, useParams } from \"react-router\";\nimport { loadCustomer, updateCustomer } from \"../../store/customer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function EditarCliente() {\n  _s();\n\n  const dispatch = useAppDispatch();\n  const history = useHistory();\n  const {\n    id\n  } = useParams();\n  useEffect(() => {\n    if (id) dispatch(loadCustomer(id));else formik.setValues({});\n  }, []);\n  const customerState = useAppSelector(store => store.customer);\n  const customer = customerState.customer;\n\n  const validate = values => {\n    const errors = {};\n    console.log('isValidCPF', values.cpf, isValidCPF(values.cpf));\n    if (!values.name) errors.name = 'Requerido';else if (!isValidName(values.name)) errors.name = 'Deve conter nome completo';else if (values.name.length < 7) errors.name = 'Deve conter pelo menos 7 caracteres';\n    if (!values.cpf) errors.cpf = 'Requerido';else if (values.cpf.length != 14) {\n      errors.cpf = 'Deve conter 11 numeros';\n    } else if (!isValidCPF(values.cpf)) {\n      errors.cpf = 'CPF inválido';\n    }\n    if (!values.email) errors.email = 'Requerido';else if (!isValidEmail(values.email)) errors.email = 'Email inválido';\n    if (!values.cep) errors.cep = 'Requerido';else if (!IsValidCEP(values.cep)) errors.cep = 'Cep invalido';\n    if (!values.street) errors.street = 'Requerido';\n    if (!values.district) errors.district = 'Requerido';\n    if (!values.city) errors.city = 'Requerido';\n    if (!values.number) errors.number = 'Requerido';\n    return errors;\n  };\n\n  const formik = useFormik({\n    initialValues: {},\n    validate,\n    onSubmit: async values => {\n      if (id) {\n        await dispatch(updateCustomer(customer.id, values));\n      } else {\n        await dispatch(updateCustomer(-1, values));\n      }\n\n      history.push('/'); // dispatch(loginThunk(values.login, values.password));\n    }\n  });\n  useEffect(() => {\n    if (customer && id) {\n      formik.setValues({\n        name: customer.nome,\n        cpf: customer.cpf,\n        email: customer.email,\n        cep: customer.endereco.cep.toString(),\n        street: customer.endereco.rua,\n        district: customer.endereco.bairro,\n        city: customer.endereco.cidade,\n        number: customer.endereco.numero\n      });\n    }\n  }, [customer]);\n\n  async function autoFillWithViaCEP(e) {\n    if (IsValidCEP(e.target.value)) {\n      const url = 'https://viacep.com.br/ws/' + e.target.value + '/json/unicode/';\n      const response = await fetch(url);\n\n      if (response.status === 200) {\n        const responseText = await response.text();\n\n        try {\n          const data = JSON.parse(responseText);\n\n          if (data.logradouro) {\n            console.log(\"deu certo\", data);\n            formik.setFieldValue('street', data.logradouro);\n            formik.setFieldValue('district', data.bairro);\n            formik.setFieldValue('city', data.localidade);\n          } else {\n            console.error('Resposta inesperada para ' + url, responseText);\n          }\n        } catch (err) {\n          console.error('JSON: Não foi possível parsear a resposta da rota ' + url);\n        }\n      } else {\n        console.error('Bad request para ' + url);\n      }\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(EditarStyles, {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [/*#__PURE__*/_jsxDEV(Icon, {\n          src: assets.edit_icon,\n          width: \"50px\",\n          height: \"50px\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 21\n        }, this), id && /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Editar Cliente\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 28\n        }, this) || /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Adicionar Cliente\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 59\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 17\n      }, this), (customer || !id) && customerState.status !== 'updating' && /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: formik.handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(Input, {\n          formik: formik,\n          name: \"name\",\n          type: \"text\",\n          placeholder: \"Nome...\",\n          label: \"Nome\",\n          icon: assets.name_icon\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          formik: formik,\n          type: \"text\",\n          name: \"cpf\",\n          placeholder: \"000.000.000-00\",\n          label: \"CPF\",\n          icon: assets.cpf_icon,\n          format: \"cpf\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          formik: formik,\n          type: \"text\",\n          name: \"email\",\n          placeholder: \"example@gmail.com\",\n          label: \"E-mail\",\n          icon: assets.email_icon\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n          children: [/*#__PURE__*/_jsxDEV(\"legend\", {\n            children: \"Endere\\xE7o:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            formik: formik,\n            type: \"text\",\n            name: \"cep\",\n            placeholder: \"83209-000\",\n            label: \"CEP\",\n            icon: assets.cep_icon,\n            format: \"cep\",\n            onChange: autoFillWithViaCEP\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            formik: formik,\n            type: \"text\",\n            name: \"street\",\n            placeholder: \"Rua Exemplo da Silva\",\n            label: \"Rua\",\n            icon: assets.street_icon\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            formik: formik,\n            type: \"text\",\n            name: \"district\",\n            placeholder: \"Bairro\",\n            label: \"Bairro\",\n            icon: assets.bairro_icon\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            formik: formik,\n            type: \"text\",\n            name: \"city\",\n            placeholder: \"S\\xE3o paulo...\",\n            label: \"Cidade\",\n            icon: assets.city_icon\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            formik: formik,\n            type: \"number\",\n            name: \"number\",\n            placeholder: \"123...\",\n            label: \"N\\xFAmero\",\n            icon: assets.number_icon\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(CenterButtons, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            disabled: !formik.isValid,\n            children: [/*#__PURE__*/_jsxDEV(Icon, {\n              src: assets.login_icon,\n              width: \"32px\",\n              height: \"32px\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 33\n            }, this), \"Salvar\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            children: [/*#__PURE__*/_jsxDEV(Icon, {\n              src: assets.login_icon,\n              width: \"32px\",\n              height: \"32px\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 33\n            }, this), \"Voltar\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 21\n      }, this) || /*#__PURE__*/_jsxDEV(CenteredLoaderWheel, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 188,\n    columnNumber: 9\n  }, this);\n}\n\n_s(EditarCliente, \"L8GRHmVotbGhuWiNnaQ1DmJtoks=\", false, function () {\n  return [useAppDispatch, useHistory, useParams, useAppSelector, useFormik];\n});\n\n_c = EditarCliente;\n\nfunction isValidCPF(strCPF) {\n  strCPF = strCPF.replace(/[^\\d]/g, \"\"); //remove caracteres repetidos\n\n  let Soma;\n  let Resto;\n  Soma = 0;\n  if (strCPF == \"00000000000\") return false;\n\n  for (let i = 1; i <= 9; i++) Soma = Soma + parseInt(strCPF.substring(i - 1, i)) * (11 - i);\n\n  Resto = Soma * 10 % 11;\n  if (Resto == 10 || Resto == 11) Resto = 0;\n  if (Resto != parseInt(strCPF.substring(9, 10))) return false;\n  Soma = 0;\n\n  for (let i = 1; i <= 10; i++) Soma = Soma + parseInt(strCPF.substring(i - 1, i)) * (12 - i);\n\n  Resto = Soma * 10 % 11;\n  if (Resto == 10 || Resto == 11) Resto = 0;\n  if (Resto != parseInt(strCPF.substring(10, 11))) return false;\n  return true;\n}\n\nfunction isValidEmail(email) {\n  return /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(email);\n}\n\nfunction IsValidCEP(strCEP) {\n  const objER = /^\\d{5}-\\d{3}$/;\n\n  if (strCEP.length > 0) {\n    if (objER.test(strCEP.replace(/(\\d{5})(\\d{3})/, \"$1-$2\"))) return true;else return false;\n  } else return false;\n}\n\n_c2 = IsValidCEP;\n\nfunction isValidName(name) {\n  const pattern = /[A-Za-záàâãéèêíïóôõöúçñÁÀÂÃÉÈÍÏÓÔÕÖÚÇÑ]{2,99}\\s[A-Za-záàâãéèêíïóôõöúçñÁÀÂÃÉÈÍÏÓÔÕÖÚÇÑ]{2,99}/gi;\n  return pattern.test(name);\n}\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"EditarCliente\");\n$RefreshReg$(_c2, \"IsValidCEP\");","map":{"version":3,"sources":["/home/leo/Dev/Desafio_frontend_troupe_tecnologia/src/components/EditarCliente/index.tsx"],"names":["React","useEffect","EditarStyles","CenterButtons","CenteredLoaderWheel","Button","Container","Icon","assets","Input","useFormik","useAppDispatch","useAppSelector","useHistory","useParams","loadCustomer","updateCustomer","EditarCliente","dispatch","history","id","formik","setValues","customerState","store","customer","validate","values","errors","console","log","cpf","isValidCPF","name","isValidName","length","email","isValidEmail","cep","IsValidCEP","street","district","city","number","initialValues","onSubmit","push","nome","endereco","toString","rua","bairro","cidade","numero","autoFillWithViaCEP","e","target","value","url","response","fetch","status","responseText","text","data","JSON","parse","logradouro","setFieldValue","localidade","error","err","edit_icon","handleSubmit","name_icon","cpf_icon","email_icon","cep_icon","street_icon","bairro_icon","city_icon","number_icon","isValid","login_icon","strCPF","replace","Soma","Resto","i","parseInt","substring","test","strCEP","objER","pattern"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\nimport { EditarStyles, CenterButtons, CenteredLoaderWheel } from \"./style\";\nimport { Button, Container, Icon, LoaderWheel } from \"../../globalStyle\";\nimport assets from \"../../assets\";\nimport { formatCPF } from \"../../utils/formatCpf\";\nimport Input from \"./Input\";\nimport { useFormik } from \"formik\";\nimport { useAppDispatch, useAppSelector } from \"../../store/hooks\";\nimport { useHistory, useLocation, useParams } from \"react-router\";\nimport { loadCustomer, updateCustomer } from \"../../store/customer\";\nimport { RootState } from \"../../store\";\n\nexport interface FormularyType {\n    name?: string,\n    cpf?: string,\n    email?: string,\n    cep?: string,\n    street?: string,\n    district?: string,\n    city?: string,\n    number?: number\n}\n\ninterface ViaCEPResponseType {\n\n    cep: string,\n    logradouro: string,\n    complemento: string,\n    bairro: string,\n    localidade: string,\n    uf: string,\n    ibge: number,\n    gia: number,\n    ddd: number,\n    siafi: number\n\n}\ntype allPropsAsString<T> = {\n    [P in keyof T as string]: string\n}\n\ntype PropType<TObj, TProp extends keyof TObj> = TObj[TProp];\n\ntype allKeysAsString<T> = {\n    [P in keyof T as string]: PropType<T, P>\n}\n\nexport default function EditarCliente() {\n\n    const dispatch = useAppDispatch();\n\n    const history = useHistory();\n\n    const { id } = useParams<{ id: string }>();\n\n    useEffect(() => {\n\n        if (id)\n            dispatch(loadCustomer(id));\n        else\n            formik.setValues({});\n\n    }, []);\n\n\n    const customerState = useAppSelector((store: RootState) => store.customer);\n\n    const customer = customerState.customer;\n\n    const validate = (values: FormularyType) => {\n\n        const errors: allPropsAsString<FormularyType> = {};\n\n        console.log('isValidCPF', values.cpf, isValidCPF(values.cpf));\n\n        if (!values.name)\n            errors.name = 'Requerido';\n        else if (!isValidName(values.name))\n            errors.name = 'Deve conter nome completo';\n        else if (values.name.length < 7)\n            errors.name = 'Deve conter pelo menos 7 caracteres';\n\n\n        if (!values.cpf)\n            errors.cpf = 'Requerido';\n        else if (values.cpf.length != 14) {\n            errors.cpf = 'Deve conter 11 numeros';\n        }\n        else if (!isValidCPF(values.cpf)) {\n\n            errors.cpf = 'CPF inválido';\n        }\n\n        if (!values.email)\n            errors.email = 'Requerido';\n        else if (!isValidEmail(values.email))\n            errors.email = 'Email inválido';\n\n        if (!values.cep)\n            errors.cep = 'Requerido';\n        else if (!IsValidCEP(values.cep))\n            errors.cep = 'Cep invalido';\n\n        if (!values.street)\n            errors.street = 'Requerido';\n\n        if (!values.district)\n            errors.district = 'Requerido';\n\n        if (!values.city)\n            errors.city = 'Requerido';\n\n        if (!values.number)\n            errors.number = 'Requerido';\n\n        return errors;\n    }\n\n    const formik = useFormik({\n        initialValues: {\n\n        },\n        validate,\n        onSubmit: async (values) => {\n\n            if (id) {\n                await dispatch(updateCustomer(customer.id, values));\n            } else {\n                await dispatch(updateCustomer(-1, values));\n            }\n\n            history.push('/');\n            // dispatch(loginThunk(values.login, values.password));\n        }\n    })\n\n    useEffect(() => {\n\n        if (customer && id) {\n            formik.setValues({\n                name: customer.nome,\n                cpf: customer.cpf,\n                email: customer.email,\n                cep: customer.endereco.cep.toString(),\n                street: customer.endereco.rua,\n                district: customer.endereco.bairro,\n                city: customer.endereco.cidade,\n                number: customer.endereco.numero\n            });\n        }\n    }, [customer])\n\n\n\n    async function autoFillWithViaCEP(e: React.ChangeEvent<HTMLInputElement>) {\n\n        if (IsValidCEP(e.target.value)) {\n            const url = 'https://viacep.com.br/ws/' + e.target.value + '/json/unicode/';\n            const response = await fetch(url);\n            if (response.status === 200) {\n                const responseText = await response.text();\n\n                try {\n                    const data = JSON.parse(responseText) as ViaCEPResponseType;\n\n                    if (data.logradouro) {\n\n                        console.log(\"deu certo\", data);\n\n                        formik.setFieldValue('street', data.logradouro);\n                        formik.setFieldValue('district', data.bairro);\n                        formik.setFieldValue('city', data.localidade);\n\n                    } else {\n                        console.error('Resposta inesperada para ' + url, responseText);\n                    }\n\n                } catch (err) {\n                    console.error('JSON: Não foi possível parsear a resposta da rota ' + url)\n                }\n            } else {\n                console.error('Bad request para ' + url)\n            }\n        }\n    }\n\n    return (\n        <EditarStyles>\n            <Container>\n\n                <h1>\n                    <Icon src={assets.edit_icon} width='50px' height='50px' />\n                    {id && <span>Editar Cliente</span> || <span>Adicionar Cliente</span>\n                    }\n                </h1>\n\n                {(customer || !id) && customerState.status !== 'updating' &&\n                    <form onSubmit={formik.handleSubmit}>\n                        <Input formik={formik} name='name' type='text' placeholder='Nome...' label='Nome' icon={assets.name_icon} />\n                        <Input formik={formik} type='text' name='cpf' placeholder='000.000.000-00' label='CPF' icon={assets.cpf_icon} format='cpf' />\n                        <Input formik={formik} type='text' name='email' placeholder='example@gmail.com' label='E-mail' icon={assets.email_icon} />\n                        <fieldset>\n                            <legend>Endereço:</legend>\n                            <Input formik={formik} type='text' name='cep' placeholder='83209-000' label='CEP' icon={assets.cep_icon} format='cep' onChange={autoFillWithViaCEP} />\n                            <Input formik={formik} type='text' name='street' placeholder='Rua Exemplo da Silva' label='Rua' icon={assets.street_icon} />\n                            <Input formik={formik} type='text' name='district' placeholder='Bairro' label='Bairro' icon={assets.bairro_icon} />\n                            <Input formik={formik} type='text' name='city' placeholder='São paulo...' label='Cidade' icon={assets.city_icon} />\n                            <Input formik={formik} type='number' name='number' placeholder='123...' label='Número' icon={assets.number_icon} />\n                        </fieldset>\n\n                        <CenterButtons>\n                            <Button type='submit' disabled={!formik.isValid}>\n                                <Icon src={assets.login_icon} width='32px' height='32px' />\n                                Salvar\n                            </Button>\n                            <Button>\n                                <Icon src={assets.login_icon} width='32px' height='32px' />\n                                Voltar\n                            </Button>\n                        </CenterButtons>\n\n                    </form> ||\n                    <CenteredLoaderWheel />\n                }\n\n            </Container>\n        </EditarStyles>\n\n    );\n}\n\nfunction isValidCPF(strCPF: string) {\n\n    strCPF = strCPF.replace(/[^\\d]/g, \"\"); //remove caracteres repetidos\n\n    let Soma;\n    let Resto;\n    Soma = 0;\n    if (strCPF == \"00000000000\") return false;\n\n    for (let i = 1; i <= 9; i++) Soma = Soma + parseInt(strCPF.substring(i - 1, i)) * (11 - i);\n    Resto = (Soma * 10) % 11;\n\n    if ((Resto == 10) || (Resto == 11)) Resto = 0;\n    if (Resto != parseInt(strCPF.substring(9, 10))) return false;\n\n    Soma = 0;\n    for (let i = 1; i <= 10; i++) Soma = Soma + parseInt(strCPF.substring(i - 1, i)) * (12 - i);\n    Resto = (Soma * 10) % 11;\n\n    if ((Resto == 10) || (Resto == 11)) Resto = 0;\n    if (Resto != parseInt(strCPF.substring(10, 11))) return false;\n    return true;\n}\n\nfunction isValidEmail(email: string) {\n    return /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(email)\n}\n\n\nfunction IsValidCEP(strCEP: string) {\n\n    const objER = /^\\d{5}-\\d{3}$/;\n\n    if (strCEP.length > 0) {\n        if (objER.test(strCEP.replace(/(\\d{5})(\\d{3})/, \"$1-$2\")))\n            return true;\n        else\n            return false;\n    }\n    else\n        return false;\n}\n\nfunction isValidName(name: string) {\n    const pattern = /[A-Za-záàâãéèêíïóôõöúçñÁÀÂÃÉÈÍÏÓÔÕÖÚÇÑ]{2,99}\\s[A-Za-záàâãéèêíïóôõöúçñÁÀÂÃÉÈÍÏÓÔÕÖÚÇÑ]{2,99}/gi;\n    return pattern.test(name);\n\n}"]},"metadata":{},"sourceType":"module"}