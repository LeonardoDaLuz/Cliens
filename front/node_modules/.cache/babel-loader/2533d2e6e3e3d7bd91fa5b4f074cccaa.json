{"ast":null,"code":"var _jsxFileName = \"/home/leo/Dev/Desafio_frontend_troupe_tecnologia/src/components/EditarCliente/Input/index.tsx\";\nimport React from \"react\";\nimport { InputBackground, InputIcon, ErrorLabel, InputStyles } from \"./style\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Input({\n  type,\n  name,\n  label,\n  icon,\n  formik,\n  placeholder,\n  format,\n  onChange,\n  disabled\n}) {\n  return /*#__PURE__*/_jsxDEV(InputStyles, {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: name,\n      children: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this), formik.errors[name] ? /*#__PURE__*/_jsxDEV(ErrorLabel, {\n      children: [\"(\", formik.errors[name], \")\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 36\n    }, this) : null, /*#__PURE__*/_jsxDEV(InputBackground, {\n      disabled: disabled,\n      children: [/*#__PURE__*/_jsxDEV(InputIcon, {\n        icon: icon\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: type,\n        name: name,\n        id: name,\n        onChange: e => {\n          if (format === 'cpf') e.target.value = formatCPF(e.target.value);\n          if (format === 'cep') e.target.value = formatCEP(e.target.value);\n          formik.handleChange(e);\n          if (onChange) onChange(e);\n        },\n        value: formik.values[name],\n        placeholder: placeholder,\n        disabled: disabled\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n}\n_c = Input;\n\nfunction formatCPF(cpf) {\n  cpf = cpf.replace(/[^\\d]/g, \"\"); //remove caracteres especiais e letras\n\n  if (cpf.length < 7 && cpf.length > 3) {\n    return cpf.replace(/(\\d{3})/, \"$1.\");\n  }\n\n  if (cpf.length < 10 && cpf.length > 6) {\n    return cpf.replace(/(\\d{3})(\\d{3})/, \"$1.$2.\");\n  }\n\n  if (cpf.length > 9) {\n    console.log(cpf.length);\n    return cpf.replace(/(\\d{3})(\\d{3})(\\d{3})/, \"$1.$2.$3-\");\n  }\n\n  return cpf;\n}\n\nfunction formatCEP(cpf) {\n  if (cpf === \"undefined\" || typeof cpf === 'undefined') return \"\"; //retira os caracteres indesejados...\n\n  cpf = cpf.replace(/[^\\d]/g, \"\").substring(0, 8); //realizar a formatação...\n\n  return cpf.replace(/(\\d{5})(\\d{3})/, \"$1-$2\");\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"Input\");","map":{"version":3,"sources":["/home/leo/Dev/Desafio_frontend_troupe_tecnologia/src/components/EditarCliente/Input/index.tsx"],"names":["React","InputBackground","InputIcon","ErrorLabel","InputStyles","Input","type","name","label","icon","formik","placeholder","format","onChange","disabled","errors","e","target","value","formatCPF","formatCEP","handleChange","values","cpf","replace","length","console","log","substring"],"mappings":";AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,eAAT,EAA0BC,SAA1B,EAAqCC,UAArC,EAAiDC,WAAjD,QAAoE,SAApE;;AAcA,eAAe,SAASC,KAAT,CAAe;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,IAAR;AAAcC,EAAAA,KAAd;AAAqBC,EAAAA,IAArB;AAA2BC,EAAAA,MAA3B;AAAmCC,EAAAA,WAAnC;AAAgDC,EAAAA,MAAhD;AAAwDC,EAAAA,QAAxD;AAAkEC,EAAAA;AAAlE,CAAf,EAAoG;AAI/G,sBACI,QAAC,WAAD;AAAA,4BACI;AAAO,MAAA,OAAO,EAAEP,IAAhB;AAAA,gBAAuBC;AAAvB;AAAA;AAAA;AAAA;AAAA,YADJ,EAEKE,MAAM,CAACK,MAAP,CAAcR,IAAd,iBAAsB,QAAC,UAAD;AAAA,sBAAcG,MAAM,CAACK,MAAP,CAAcR,IAAd,CAAd;AAAA;AAAA;AAAA;AAAA;AAAA,YAAtB,GAAyE,IAF9E,eAGI,QAAC,eAAD;AAAiB,MAAA,QAAQ,EAAEO,QAA3B;AAAA,8BACI,QAAC,SAAD;AAAW,QAAA,IAAI,EAAEL;AAAjB;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AACI,QAAA,IAAI,EAAEH,IADV;AAEI,QAAA,IAAI,EAAEC,IAFV;AAGI,QAAA,EAAE,EAAEA,IAHR;AAII,QAAA,QAAQ,EAAGS,CAAD,IAAO;AAEb,cAAIJ,MAAM,KAAK,KAAf,EACII,CAAC,CAACC,MAAF,CAASC,KAAT,GAAiBC,SAAS,CAACH,CAAC,CAACC,MAAF,CAASC,KAAV,CAA1B;AAGJ,cAAIN,MAAM,KAAK,KAAf,EACII,CAAC,CAACC,MAAF,CAASC,KAAT,GAAiBE,SAAS,CAACJ,CAAC,CAACC,MAAF,CAASC,KAAV,CAA1B;AAEJR,UAAAA,MAAM,CAACW,YAAP,CAAoBL,CAApB;AAEA,cAAIH,QAAJ,EACIA,QAAQ,CAACG,CAAD,CAAR;AACP,SAjBL;AAmBI,QAAA,KAAK,EAAEN,MAAM,CAACY,MAAP,CAAcf,IAAd,CAnBX;AAoBI,QAAA,WAAW,EAAEI,WApBjB;AAqBI,QAAA,QAAQ,EAAEG;AArBd;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAiCH;KArCuBT,K;;AAuCxB,SAASc,SAAT,CAAmBI,GAAnB,EAA4C;AAExCA,EAAAA,GAAG,GAAGA,GAAG,CAACC,OAAJ,CAAY,QAAZ,EAAsB,EAAtB,CAAN,CAFwC,CAEP;;AAEjC,MAAID,GAAG,CAACE,MAAJ,GAAa,CAAb,IAAkBF,GAAG,CAACE,MAAJ,GAAa,CAAnC,EAAsC;AAClC,WAAOF,GAAG,CAACC,OAAJ,CAAY,SAAZ,EAAuB,KAAvB,CAAP;AACH;;AACD,MAAID,GAAG,CAACE,MAAJ,GAAa,EAAb,IAAmBF,GAAG,CAACE,MAAJ,GAAa,CAApC,EAAuC;AACnC,WAAOF,GAAG,CAACC,OAAJ,CAAY,gBAAZ,EAA8B,QAA9B,CAAP;AACH;;AACD,MAAID,GAAG,CAACE,MAAJ,GAAa,CAAjB,EAAoB;AAChBC,IAAAA,OAAO,CAACC,GAAR,CAAYJ,GAAG,CAACE,MAAhB;AACA,WAAOF,GAAG,CAACC,OAAJ,CAAY,uBAAZ,EAAqC,WAArC,CAAP;AACH;;AAED,SAAOD,GAAP;AACH;;AAED,SAASH,SAAT,CAAmBG,GAAnB,EAA4C;AAIxC,MAAIA,GAAG,KAAK,WAAR,IAAuB,OAAOA,GAAP,KAAe,WAA1C,EACI,OAAO,EAAP,CALoC,CAMxC;;AACAA,EAAAA,GAAG,GAAGA,GAAG,CAACC,OAAJ,CAAY,QAAZ,EAAsB,EAAtB,EAA0BI,SAA1B,CAAoC,CAApC,EAAuC,CAAvC,CAAN,CAPwC,CASxC;;AACA,SAAOL,GAAG,CAACC,OAAJ,CAAY,gBAAZ,EAA8B,OAA9B,CAAP;AACH","sourcesContent":["import { Formik } from \"formik\";\nimport React from \"react\";\nimport { InputBackground, InputIcon, ErrorLabel, InputStyles } from \"./style\";\n\ninterface props {\n    type: string,\n    name: string,\n    label: string,\n    icon: string,\n    placeholder?: string,\n    formik: any,\n    format?: 'none' | 'cpf' | 'email' | 'cep',\n    onChange?: (e: any) => void,\n    disabled?: boolean\n}\n\nexport default function Input({ type, name, label, icon, formik, placeholder, format, onChange, disabled }: props) {\n\n\n\n    return (\n        <InputStyles>\n            <label htmlFor={name}>{label}</label>\n            {formik.errors[name] ? <ErrorLabel>({formik.errors[name]})</ErrorLabel> : null}\n            <InputBackground disabled={disabled}>\n                <InputIcon icon={icon}></InputIcon>\n                <input\n                    type={type}\n                    name={name}\n                    id={name}\n                    onChange={(e) => {\n\n                        if (format === 'cpf')\n                            e.target.value = formatCPF(e.target.value);\n\n\n                        if (format === 'cep')\n                            e.target.value = formatCEP(e.target.value);\n\n                        formik.handleChange(e);\n\n                        if (onChange)\n                            onChange(e);\n                    }\n                    }\n                    value={formik.values[name]}\n                    placeholder={placeholder}\n                    disabled={disabled}\n                />\n            </InputBackground>\n        </InputStyles>\n\n    )\n}\n\nfunction formatCPF(cpf: string | undefined) {\n\n    cpf = cpf.replace(/[^\\d]/g, \"\"); //remove caracteres especiais e letras\n\n    if (cpf.length < 7 && cpf.length > 3) {\n        return cpf.replace(/(\\d{3})/, \"$1.\");\n    }\n    if (cpf.length < 10 && cpf.length > 6) {\n        return cpf.replace(/(\\d{3})(\\d{3})/, \"$1.$2.\");\n    }\n    if (cpf.length > 9) {\n        console.log(cpf.length);\n        return cpf.replace(/(\\d{3})(\\d{3})(\\d{3})/, \"$1.$2.$3-\");\n    }\n\n    return cpf;\n}\n\nfunction formatCEP(cpf: string | undefined) {\n\n\n\n    if (cpf === \"undefined\" || typeof cpf === 'undefined')\n        return \"\";\n    //retira os caracteres indesejados...\n    cpf = cpf.replace(/[^\\d]/g, \"\").substring(0, 8);\n\n    //realizar a formatação...\n    return cpf.replace(/(\\d{5})(\\d{3})/, \"$1-$2\");\n}\n\n"]},"metadata":{},"sourceType":"module"}